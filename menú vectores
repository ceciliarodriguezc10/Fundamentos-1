#include "stdafx.h"
#include <iostream>
#include "conio.h"
#include "math.h"
#define MAX 100

usando el espacio de nombres std;

void cargar (int vec [], int n);
void mostrar (int vec [], int n);
void unir (int v1 [], int n, int v2 [], int m, int vec [], int & tam);
burbuja vacía (int vec [], int m);

vacío principal(){
	int tam, n, m, A [MAX], B [MAX], C [MAX];
	int opc;
	hacer{
	cout << "1) cargar" << endl;
	cout << "2) mostrar" << endl;
	cout << "3) concatenar" << endl;
	cout << "4) ordenar" << endl;
	cout << "5) Salir" << endl;
	cin >> opc;
	cambiar (opc) {
	caso 1: haz {
		    cout << "Ingresar el tamaño del primer vector:";
		    cin >> n;
	        } while ((n <= 0) || (n> MAX));
	       cargar (A, n); // Cargar el primer vector
	       hacer {
		      cout << "Ingresar el tamaño del segundo vector:";
		      cin >> m;
	          } while ((m <= 0) || (m> MAX));

	        romper;
	caso 2: cargar (B, m); // Cargar el segundo vector
		    romper;
	caso 3: unir (A, n, B, m, C, tam); 
		   romper;
	caso 4: burbuja (C, tam); // Clasificados en orden ascendente
	        mostrar (C, tam); // Muestro el vector C
			romper;
	caso 0: cout << "Salir del menu";
		    romper;
	predeterminado: cout << "ERROR DE OPCION";
		    romper;
}
	getch ();
	sistema ("cls");
} while (opc! = 0);


getch ();
}
void cargar (int vec [], int n)
{
	para (int i = 0; i <n; i ++)
	{
		cout << "Vector [" << i << "] =";
		cin >> vec [i];
	}
}

void mostrar (int vec [], int n)
{
	para (int i = 0; i <n; i ++)
		cout << "Vector [" << i << "] =" << vec [i] << endl;
}

void unir (int v1 [], int n, int v2 [], int m, int vec [], int & tam)
{
	for (int i = 0; i <n; i ++) // Copio el primer vector v1
		vec [i] = v1 [i];
	for (int i = 0; i <m; i ++) // Copio el segundo vector v2
		vec [i + n] = v2 [i];
	tam = n + m;
}

burbuja vacía (int vec [], int m)
{
	int aux;
	para (int i = 0; i <m-1; i ++)
	{
		para (int j = i + 1; j <m; j ++)
			si (vec [i]> vec [j])
			{
				aux = vec [j];
				vec [j] = vec [i];
				vec [i] = aux;
			}
	}	
}
